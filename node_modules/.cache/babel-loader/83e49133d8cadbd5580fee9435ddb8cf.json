{"ast":null,"code":"import _slicedToArray from \"/Users/indreklasn/Work/react-fire-auth-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/indreklasn/Work/react-fire-auth-example/src/index.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Switch, Router, Route } from \"react-router-dom\";\nimport routes from \"./routes.js\";\nimport { createBrowserHistory } from \"history\";\nimport Header from \"./Header\";\nimport \"./styles.css\";\nimport protectedRoutes from './protectedRoutes';\nimport * as firebase from \"firebase\";\nimport firebaseConfig from \"./firebase.config\";\nimport ProtectedRouteHoc from './ProtectedRouteHoc';\nfirebase.initializeApp(firebaseConfig);\nexport var AuthContext = React.createContext(null);\n\nfunction App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoggedIn = _useState2[0],\n      setLoggedIn = _useState2[1];\n\n  var history = createBrowserHistory();\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      setLoggedIn: setLoggedIn\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Is logged in? \", JSON.stringify(isLoggedIn), React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Router, {\n    history: history,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Header, {\n    isLoggedIn: isLoggedIn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, protectedRoutes.map(function (route) {\n    return React.createElement(ProtectedRouteHoc, {\n      key: route.path,\n      isLoggedIn: isLoggedIn,\n      path: route.path,\n      component: route.main,\n      exact: route.exact,\n      public: route.public,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    });\n  }), routes.map(function (route) {\n    return React.createElement(Route, {\n      key: route.path,\n      path: route.path,\n      exact: route.exact,\n      component: route.main,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    });\n  })))));\n}\n\nvar rootElement = document.getElementById(\"root\");\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58\n  },\n  __self: this\n}), rootElement);","map":{"version":3,"sources":["/Users/indreklasn/Work/react-fire-auth-example/src/index.js"],"names":["React","useState","ReactDOM","Switch","Router","Route","routes","createBrowserHistory","Header","protectedRoutes","firebase","firebaseConfig","ProtectedRouteHoc","initializeApp","AuthContext","createContext","App","isLoggedIn","setLoggedIn","history","JSON","stringify","map","route","path","main","exact","public","rootElement","document","getElementById","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,KAAzB,QAAsC,kBAAtC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,cAAP;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AAEA,OAAOC,iBAAP,MAA8B,qBAA9B;AAEAF,QAAQ,CAACG,aAAT,CAAuBF,cAAvB;AAGA,OAAO,IAAMG,WAAW,GAAGd,KAAK,CAACe,aAAN,CAAoB,IAApB,CAApB;;AAEP,SAASC,GAAT,GAAe;AAAA,kBACqBf,QAAQ,CAAC,KAAD,CAD7B;AAAA;AAAA,MACNgB,UADM;AAAA,MACMC,WADN;;AAEb,MAAMC,OAAO,GAAGZ,oBAAoB,EAApC;AAEA,SACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEU,MAAAA,UAAU,EAAVA,UAAF;AAAcC,MAAAA,WAAW,EAAXA;AAAd,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACiBE,IAAI,CAACC,SAAL,CAAeJ,UAAf,CADjB,EAEE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,UAAU,EAAEF,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,eAAe,CAACa,GAAhB,CAAoB,UAAAC,KAAK;AAAA,WACxB,oBAAC,iBAAD;AACE,MAAA,GAAG,EAAEA,KAAK,CAACC,IADb;AAEE,MAAA,UAAU,EAAEP,UAFd;AAGE,MAAA,IAAI,EAAEM,KAAK,CAACC,IAHd;AAIE,MAAA,SAAS,EAAED,KAAK,CAACE,IAJnB;AAKE,MAAA,KAAK,EAAEF,KAAK,CAACG,KALf;AAME,MAAA,MAAM,EAAEH,KAAK,CAACI,MANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADwB;AAAA,GAAzB,CADH,EAWGrB,MAAM,CAACgB,GAAP,CAAW,UAAAC,KAAK;AAAA,WACf,oBAAC,KAAD;AACE,MAAA,GAAG,EAAEA,KAAK,CAACC,IADb;AAEE,MAAA,IAAI,EAAED,KAAK,CAACC,IAFd;AAGE,MAAA,KAAK,EAAED,KAAK,CAACG,KAHf;AAIE,MAAA,SAAS,EAAEH,KAAK,CAACE,IAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADe;AAAA,GAAhB,CAXH,CAHF,CADF,CAFF,CADF;AA+BD;;AAED,IAAMG,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACA5B,QAAQ,CAAC6B,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBH,WAAzB","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Switch, Router, Route } from \"react-router-dom\";\nimport routes from \"./routes.js\";\nimport { createBrowserHistory } from \"history\";\nimport Header from \"./Header\";\nimport \"./styles.css\";\n\nimport protectedRoutes from './protectedRoutes'\nimport * as firebase from \"firebase\";\nimport firebaseConfig from \"./firebase.config\";\n\nimport ProtectedRouteHoc from './ProtectedRouteHoc'\n\nfirebase.initializeApp(firebaseConfig);\n\n\nexport const AuthContext = React.createContext(null);\n\nfunction App() {\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const history = createBrowserHistory()\n\n  return (\n    <AuthContext.Provider value={{ isLoggedIn, setLoggedIn }}>\n      Is logged in? {JSON.stringify(isLoggedIn)}\n      <div className=\"App\">\n        <Router history={history}>\n          <Header isLoggedIn={isLoggedIn}/>\n\n          <Switch>\n            {protectedRoutes.map(route => (\n              <ProtectedRouteHoc\n                key={route.path}\n                isLoggedIn={isLoggedIn}\n                path={route.path}\n                component={route.main}\n                exact={route.exact}\n                public={route.public}\n              />\n            ))}\n            {routes.map(route => (\n              <Route\n                key={route.path}\n                path={route.path}\n                exact={route.exact}\n                component={route.main}\n              />\n            ))}\n          </Switch>\n        </Router>\n      </div>\n    </AuthContext.Provider>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}